{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/material/toolbar\";\nconst _c0 = function (a0, a1) {\n  return {\n    \"transparent\": a0,\n    \"scrolled\": a1\n  };\n};\nexport class NavbarComponent {\n  constructor() {\n    this.isScrolled = false;\n    this.logoAlt = \"\";\n    this.logoImage = '../../assets/img/logo_full_alt.svg';\n  }\n  onScroll() {\n    this.isScrolled = (window.scrollY || document.documentElement.scrollTop || document.body.scrollTop) > 0;\n    this.logoImage = this.isScrolled ? '../../assets/img/logo_full.svg' : '../../assets/img/logo_full_alt.svg';\n  }\n}\nNavbarComponent.ɵfac = function NavbarComponent_Factory(t) {\n  return new (t || NavbarComponent)();\n};\nNavbarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: NavbarComponent,\n  selectors: [[\"app-navbar\"]],\n  hostBindings: function NavbarComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"scroll\", function NavbarComponent_scroll_HostBindingHandler() {\n        return ctx.onScroll();\n      }, false, i0.ɵɵresolveWindow);\n    }\n  },\n  decls: 2,\n  vars: 8,\n  consts: [[3, \"ngClass\"], [1, \"logo-dark\", 3, \"src\", \"alt\"]],\n  template: function NavbarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-toolbar\", 0);\n      i0.ɵɵelement(1, \"img\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(5, _c0, !ctx.isScrolled, ctx.isScrolled));\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"logo-light\", ctx.isScrolled);\n      i0.ɵɵproperty(\"src\", ctx.logoImage, i0.ɵɵsanitizeUrl)(\"alt\", ctx.logoAlt);\n    }\n  },\n  dependencies: [i1.NgClass, i2.MatToolbar],\n  styles: [\"mat-toolbar[_ngcontent-%COMP%] {\\n  transition: background-color 0.3s;\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  z-index: 100;\\n  height: 100px;\\n  padding: 0.5em;\\n}\\nmat-toolbar[_ngcontent-%COMP%]   img[_ngcontent-%COMP%] {\\n  height: 100%;\\n}\\n\\n.transparent[_ngcontent-%COMP%] {\\n  background-color: transparent;\\n}\\n\\n.scrolled[_ngcontent-%COMP%] {\\n  background-color: white;\\n}\\n\\n.logo-dark[_ngcontent-%COMP%] {\\n  opacity: 1;\\n  transition: opacity 0.3s;\\n}\\n\\n.logo-light[_ngcontent-%COMP%] {\\n  opacity: 1;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9uYXZiYXIvbmF2YmFyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksaUNBQUE7RUFDQSxlQUFBO0VBQ0EsTUFBQTtFQUNBLE9BQUE7RUFDQSxRQUFBO0VBQ0EsWUFBQTtFQUNBLGFBQUE7RUFDQSxjQUFBO0FBQ0o7QUFBSTtFQUNJLFlBQUE7QUFFUjs7QUFFRTtFQUNFLDZCQUFBO0FBQ0o7O0FBRUU7RUFDRSx1QkFBQTtBQUNKOztBQUVFO0VBQ0UsVUFBQTtFQUNBLHdCQUFBO0FBQ0o7O0FBRUU7RUFDRSxVQUFBO0FBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtdG9vbGJhciB7XG4gICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjNzO1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMDtcbiAgICByaWdodDogMDtcbiAgICB6LWluZGV4OiAxMDA7XG4gICAgaGVpZ2h0OjEwMHB4O1xuICAgIHBhZGRpbmc6LjVlbTtcbiAgICBpbWcge1xuICAgICAgICBoZWlnaHQ6MTAwJTtcbiAgICB9XG4gIH1cbiAgXG4gIC50cmFuc3BhcmVudCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIH1cbiAgXG4gIC5zY3JvbGxlZCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gIH1cbiAgXG4gIC5sb2dvLWRhcmsge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjNzO1xuICB9XG4gIFxuICAubG9nby1saWdodCB7XG4gICAgb3BhY2l0eTogMTtcbiAgfVxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":";;;;;;;;;AAOA,OAAM,MAAOA,eAAe;EAL5BC;IAME,eAAU,GAAG,KAAK;IAClB,YAAO,GAAG,EAAE;IACZ,cAAS,GAAG,oCAAoC;;EAGhDC,QAAQ;IACN,IAAI,CAACC,UAAU,GAAG,CAACC,MAAM,CAACC,OAAO,IAAIC,QAAQ,CAACC,eAAe,CAACC,SAAS,IAAIF,QAAQ,CAACG,IAAI,CAACD,SAAS,IAAI,CAAC;IACvG,IAAI,CAACE,SAAS,GAAG,IAAI,CAACP,UAAU,GAAG,gCAAgC,GAAG,oCAAoC;EAC5G;;AATWH,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAW;EAAAC;IAAA;;eAAfC,cAAU;MAAA;;;;;;;;MCPvBC,sCAA8E;MAC1EA,yBAAyF;MAC3FA,iBAAc;;;MAFHA,qFAAgE;MAChBA,eAA+B;MAA/BA,4CAA+B;MAAnFA,qDAAiB","names":["NavbarComponent","constructor","onScroll","isScrolled","window","scrollY","document","documentElement","scrollTop","body","logoImage","selectors","hostBindings","ctx","i0"],"sourceRoot":"","sources":["/Users/mkleczka/Documents/kindnesscode/src/app/components/navbar/navbar.component.ts","/Users/mkleczka/Documents/kindnesscode/src/app/components/navbar/navbar.component.html"],"sourcesContent":["import { Component, HostListener } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent {\n  isScrolled = false;\n  logoAlt = \"\";\n  logoImage = '../../assets/img/logo_full_alt.svg';\n\n  @HostListener('window:scroll')\n  onScroll() {\n    this.isScrolled = (window.scrollY || document.documentElement.scrollTop || document.body.scrollTop) > 0;\n    this.logoImage = this.isScrolled ? '../../assets/img/logo_full.svg' : '../../assets/img/logo_full_alt.svg';\n  }\n}\n","<mat-toolbar [ngClass]=\"{'transparent': !isScrolled, 'scrolled': isScrolled}\">\n    <img [src]=\"logoImage\" [alt]=\"logoAlt\" class=\"logo-dark\" [class.logo-light]=\"isScrolled\">\n  </mat-toolbar>\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}